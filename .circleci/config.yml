version: 2
jobs:
  prepare:
    docker:
      - image: circleci/node:10.8.0

    steps:
      - checkout

      - restore_cache:
          keys:
          - npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}

      - run: npm install

      - run: npm run ci:lock:update

      - save_cache:
          paths:
            - $HOME/.npm
          key: npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}

      - run: npm run ci:lock:upload

  test:
    docker:
      - image: circleci/node:10.8.0

    steps:
      - checkout

      - restore_cache:
          keys:
          - npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}

      - run: npm ci

      - run: npm run test

  automerge:
    docker:
      - image: circleci/node:10.8.0

    steps:
      - checkout
      - restore_cache:
          keys:
          - npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm ci
      - run:
          name: Merge greenkeeper branch
          command: npm run ci:automerge

  build:
    docker:
      - image: circleci/node:10.8.0
    steps:
      - add_ssh_keys:
          fingerprints:
            - 73:b4:4d:e2:33:06:62:72:5b:df:cd:8c:f4:be:d8:cc
      - checkout
      - restore_cache:
          keys:
          - npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm ci
      - run: npm run build
      - run: |
          git config --global user.email "circleci@harvestbot"
          git config --global user.name "CircleCI"
          cp -R build/ bin/
          git add ./bin
          if git commit -a -m "[skip ci] Update deployable build output."; then
            git push origin master
            # Trigger deployment with updated build output
            curl -u ${CIRCLE_API_PROJECT_TOKEN}: -d build_parameters[CIRCLE_JOB]=deploy https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
          fi

  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run: |
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GCLOUD_PROJECT}
          gcloud functions deploy initFlextime --source ${GCLOUD_REPOSITORY_URL} --region ${GCLOUD_FUNCTION_REGION} --format=none
          gcloud functions deploy calcFlextime --source ${GCLOUD_REPOSITORY_URL} --region ${GCLOUD_FUNCTION_REGION} --format=none
          gcloud functions deploy calcStats --source ${GCLOUD_REPOSITORY_URL} --region ${GCLOUD_FUNCTION_REGION} --format=none
          gcloud functions deploy notify --source ${GCLOUD_REPOSITORY_URL} --region ${GCLOUD_FUNCTION_REGION} --format=none

  notify:
    docker:
      - image: circleci/node:10.8.0
    steps:
      - checkout
      - run: ./tools/notify.sh

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - prepare
      - test:
          requires:
            - prepare
      - automerge:
          requires:
            - test
          filters:
            branches:
              only: /greenkeeper\S*/
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
  notify:
    triggers:
      - schedule:
          cron: "0 11 * * 5"
          filters:
            branches:
              only:
                - master
    jobs:
      - notify
